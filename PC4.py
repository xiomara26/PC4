# Antes de ejecutar un script de Python en Streamlit debes definir la carpeta donde se encuentra tus archivos
# cd ruta_de_tu_carpeta 
# o abrimos el folder desde visual Studio Code 


# Primero creamos un entorno virtual para instalar Streamlit y otras librer√≠as que necesitemos.
#python -m venv .venv
# Esto nos permite crear un entorno virtual donde instalaremos Streamlit 
# y observaremos la p√°gina web que se est√° generando en este script.

# Luego activamos el entorno virtual.
# En Windows:
# .venv\Scripts\activate
# En MacOS/Linux:
# source .venv/bin/activate

# Acontinuaci√≥n instalamos Streamlit 
# pip install Streamlit

# Este c√≥digo sirve para acceder una p√°gina web en tu navegador que te brinda informaci√≥n sobre Streamlit.
# Pero se ejecuta en la terminal Python de tu computadora, no en Jupyter Notebook.
# streamlit hello

# Este comando sirve para ejecutar un script de Python en Streamlit.
# Pero se ejecuta en la terminal de tu computadora, no en Jupyter Notebook.
# OJO: Debes antes tener instalado Streamlit en tu computadora, debes antes definir la ruta de tus archivos y 
##     tener un script de Python (your_script.py) que quieras ejecutar en Streamlit.
# streamlit run PC4.py
# python -m streamlit run PC4.py

# Este c√≥digo sirve para hacer un primer programa en Streamlit.
import streamlit as st

# Generamos 3 p√°ginas en la aplicaci√≥n web de Streamlit.
# Generamos una p√°gina principal, otra donde contaran su experiencia aprendiendo a programar y una tercera donde presentar√°n sus gr√°ficos.

# Creamos la lista de p√°ginas
paginas = ['Inicio', 'Experiencia', 'Gr√°ficos']

# Creamos botones de navegaci√≥n tomando la lista de p√°ginas
pagina_seleccionada = st.sidebar.selectbox('Selecciona una p√°gina', paginas)

# Generamos condicionales para mostrar el contenido de cada p√°gina
if pagina_seleccionada == 'Inicio':

    # La funci√≥n st.markdown permite centrar y agrandar la letra del t√≠tulo de la web en Streamlit.
    st.markdown("<h1 style='text-align: center;'>Aqu√≠ escribe un nombre creativo para tu blog</h1>", unsafe_allow_html=True)

    # <h1 style='text-align: center;'>Nombre de tu blog</h1>: Esto es una cadena de c√≥digo HTML. 
    # La etiqueta <h1> se utiliza para el encabezado principal de una p√°gina web, y 
    # el atributo style se utiliza para agregar estilos CSS. 
    # En este caso, el texto est√° alineado al centro (text-align: center;). 
    # Pueden agregar emojis en el texto de Markdown utilizando c√≥digos de emoji, por ejemplo:
    # <h1 style='text-align: center;'>Aqu√≠ escribe un nombre creativo para tu blog üìù</h1>
    # Tambi√©n pueden personalizar el color del texto utilizando el atributo style, por ejemplo:
    # <h1 style='text-align: center; color: blue;'>Nombre de tu blog</h1>
    # El texto dentro de las etiquetas <h1> ("Aqu√≠ escribe un nombre creativo para tu blog") es el contenido del encabezado.

    # unsafe_allow_html=True: Este es un argumento opcional en la funci√≥n markdown. 
    # Por defecto, streamlit no permite HTML en el texto de Markdown.
    # Sin embargo, establecer unsafe_allow_html en True permite el uso de HTML.

    # Creamos dos columnas separadas para la imagen y el texto
    col1, col2 = st.columns(2)

    # col1, col2 = st.columns(2): Esta l√≠nea est√° creando dos columnas en la interfaz de usuario de la aplicaci√≥n web. 
    # La funci√≥n st.columns toma un n√∫mero entero como argumento que especifica el n√∫mero de columnas que se deben crear. 
    # Las columnas creadas se asignan a las variables col1 y col2.

    # En la primera columna colocamos la imagen de perfil
    col1.image("Foto.jpg", caption='Esta soy yoü´∂', width=300)

    # col1.image("ellie.png", caption='Ellie', width=300): Esta l√≠nea est√° colocando una imagen en la primera columna (col1). 
    # La funci√≥n image toma como primer argumento el nombre del archivo de la imagen que se desea mostrar. 
    # En este caso, la imagen es "ellie.png". 
    # El argumento caption se utiliza para proporcionar una etiqueta a la imagen, 
    # en este caso "Aqu√≠ puedes escribir una etiqueta debajo de la imagen". 
    # El argumento width se utiliza para especificar el ancho de la imagen, en este caso 300 p√≠xeles.

    # En la segunda columna colocamos el texto: Debe contener una presentaci√≥n de ustedes
    # Deben presentarse: ¬øQui√©n eres?, ¬øDe d√≥nde eres?, ¬øQu√© estudias?, ¬øQu√© te gusta de tu carrera?, 
    # ¬øQu√© te gustar√≠a hacer en el futuro?, ¬øQu√© te gusta hacer en tu tiempo libre?

    texto = """
    Me llamo Xiomara, pero me gusta que me digan Xio. Yo nac√≠ en Huancayo, que se ubica en la regi√≥n Jun√≠n. Sin embargo, ahora vivo en Lima con mi hermana quien tambi√©n est√° en la misma universidad. Cada fin de semestre me emociona volver a mi ciudad y pasar m√°s tiempo con toda mi familia. Estudio la carrera de comunicaci√≥n audiovisual en la PUCP.Lo que me gusta de mi carrera es la versatilidad de la misma para moverse en muchos espacios. La creaci√≥n de contenidos audiovisuales es un elemento esencial en la sociedad en la que vivimos hoy en d√≠a. Nos conocemos, nos informamos, interactuamos compartiendo este tipo de contenidos, por eso es importante entender que estamos creando y consumiendo. Cada video que se crea, aunque parezca irrelevante, siempre va cargado de significado. Y cuando se trata d crear contenido de gran relevancia social, es importante que quienes tengan esa labor la ejecuten responsablemente. Tambi√©n me gusta mucho el cine y a partir de mi carrera he podido conocer m√°s sobre el lenguaje cinematogr√°fico. Productos que antes ya ve√≠a, pero los veo de manera diferente e incluso m√°s interesante de lo que ya eran para m√≠. En el futuro me gustar√≠a ejercer mi carrera en raz√≥n de una causa social, por ejemplo de la mano de ONG u organizaciones especialmente en relaci√≥n a permitir el acceso de educaci√≥n y una mejor calidad de vida a ni√±os y ni√±as peque√±as. En mi tiempo libre, me gusta escuchar m√∫sica y tambi√©n cantar a la par, aunque no soy una buena cantante, pero es una actividad que me divierte mucho. Tambi√©n me gusta bailar, sobre todo canciones de kpop, que tienen bailes muy din√°micos y entretenidos. Adem√°s, me gusta jugar Roblox, una plataforma de videojuegos en l√≠nea. Muchas personas dicen que solo es u uego para ni√±os peque√±os, pero los juegos dentro son muy entretenidos, por eso a veces me conecto con mis amigos o juego sola. Esas son las actividades que realiz√≥ principalmente cuando estoy en Lima, pero cuando vuelvo a mi ciudad natal, Huancayo, realizo muchas m√°s actividades. Como tengo la mayor√≠a de mis cosas y materiales en ese lugar, ah√≠ me gusta tejer, tambi√©n tocar el viol√≠n y la guitarra, aunque este √∫ltima reci√©n la estoy aprendiendo, ocasionalmente pinto.

    """

    # Las comillas triples (""") en Python se utilizan para definir cadenas multil√≠nea.
    
    # Mostramos el texto
    col2.markdown(f"<div style='text-align: justify; font-size: 15px;'>{texto}</div>", unsafe_allow_html=True)

    # <div style='text-align: justify; font-size: 15px;'>{texto}</div>: Esta es una cadena de c√≥digo HTML. 
    # La etiqueta <div> se utiliza para agrupar contenido en HTML. 
    # En este caso, el texto est√° justificado (text-align: justify;). 
    # El tama√±o de la fuente se establece en 15 p√≠xeles (font-size: 15px;).
    # El texto dentro de las etiquetas <div> es la variable texto.
    # f"": Esto es un f-string en Python.
    # Permite insertar el valor de una variable directamente en la cadena. 
    # En este caso, {texto} se reemplaza por el valor de la variable texto.

elif  pagina_seleccionada == 'Experiencia':

    # Agregamos un t√≠tulo
    st.markdown("<h1 style='text-align: center;'>Mi experiencia aprendiendo a programar üíª</h1>", unsafe_allow_html=True)

    # En esta secci√≥n debes describir y comentar tu experiencia aprendiendo a programar
    # ¬øC√≥mo te sentiste al principio?, 
    # ¬øQu√© te ha ense√±ado la programaci√≥n?, ¬øQu√© te gusta de programar?, 
    # ¬øQu√© te gustar√≠a hacer con la programaci√≥n en el futuro? 

    # Agregar un  texto para la respuesta
    texto_2 = """
    Aqu√≠ escribe tu experiencia aprendiendo a programar. 
    ¬øC√≥mo te sentiste al principio?, 
    ¬øQu√© te ha ense√±ado la programaci√≥n?, 
    ¬øQu√© te gusta de programar?, 
    ¬øQu√© te gustar√≠a hacer con la programaci√≥n en el futuro? 
    """

    # Mostramos el texto
    st.markdown(f"<div style='text-align: justify; font-size: 18px;'>{texto_2}</div>", unsafe_allow_html=True)

    # <div style='text-align: justify; font-size: 15px;'>{texto_2}</div>: Esta es una cadena de c√≥digo HTML.
    # La etiqueta <div> se utiliza para agrupar contenido en HTML.
    # En este caso, el texto est√° justificado (text-align: justify;).
    # El tama√±o de la fuente se establece en 15 p√≠xeles (font-size: 15px;).
    # El texto dentro de las etiquetas <div> es la variable texto_2.
    # f"": Esto es un f-string en Python.
    # Permite insertar el valor de una variable directamente en la cadena. 
    # En este caso, {texto_2} se reemplaza por el valor de la variable texto.

    # Agregamos un subt√≠tulo para el video
    st.markdown("<h2 style='text-align: center;'>Cuando aprend√≠ a usar condicionales ü§ì</h2>", unsafe_allow_html=True)
    
    # <h2 style='text-align: center;'>Aqu√≠ escribe un nombre creativo para presentar tu video</h2>: Esta es una cadena de c√≥digo HTML.
    # La etiqueta <h2> se utiliza para un encabezado de segundo nivel en una p√°gina web.
    # El texto est√° centrado (text-align: center;).
    # El texto dentro de las etiquetas <h2> ("Aqu√≠ escribe un nombre creativo para presentar tu video") es el contenido del encabezado.
    # unsafe_allow_html=True: Este es un argumento opcional en la funci√≥n markdown.
    # Por defecto, streamlit no permite HTML en el texto de Markdown.
    # Sin embargo, establecer unsafe_allow_html en True permite el uso de HTML.
    # Puedes agregar emojis en el texto de Markdown utilizando c√≥digos de emoji.
    # Por ejemplo, puedes agregar un emoji de video üé• 

    # Agregamos un video realizado en las practicas anteriores
    st.video("https://youtu.be/rJnLPgrkigM")

    # st.video("https://www.youtube.com/watch?v=X_Z7d04x9-E"): Esta l√≠nea est√° mostrando un video en la aplicaci√≥n web.
    # La funci√≥n video toma como primer argumento la URL del video que se desea mostrar.
    # En este caso, la URL es "https://www.youtube.com/watch?v=X_Z7d04x9-E".
    # Puedes cambiar la URL por la de tu video en YouTube o en otra plataforma de video.

    # O creamos un bot√≥n para ir al enlace del video con button
    st.markdown(f"<div style='text-align: center;'><a href='https://drive.google.com/file/d/1REvRXSu3GuGD73w8j44135MkRiezd0gP/view?usp=drive_link' target='_blank'><button>Ver video</button></a></div>", unsafe_allow_html=True) 

    # <div style='text-align: center;'><a href='https://drive.google.com/file/d/1REvRXSu3GuGD73w8j44135MkRiezd0gP/view?usp=drive_link' target='_blank'><button>Ver video</button></a></div>:
    # Esta es una cadena de c√≥digo HTML.
    # La etiqueta <div> se utiliza para agrupar contenido en HTML.
    # En este caso, el contenido est√° centrado (text-align: center;).
    # La etiqueta <a> se utiliza para crear un enlace.
    # El atributo href especifica la URL a la que se dirige el enlace.
    # En este caso, la URL es 'https://drive.google.com/file/d/1REvRXSu3GuGD73w8j44135MkRiezd0gP/view?usp=drive_link'.
    # El atributo target='_blank' indica que el enlace se abrir√° en una nueva pesta√±a del navegador.
    # La etiqueta <button> se utiliza para crear un bot√≥n.
    # El texto dentro de las etiquetas <button> ("Ver video") es el contenido del bot√≥n.
    # unsafe_allow_html=True: Este es un argumento opcional en la funci√≥n markdown.
    # Por defecto, streamlit no permite HTML en el texto de Markdown.
    # Sin embargo, establecer unsafe_allow_html en True permite el uso de HTML.
    # Puedes cambiar la URL por la de tu video en YouTube o en otra plataforma de video.
    
else:

    # Agregamos un t√≠tulo para la p√°gina de gr√°ficos
    st.markdown("<h1 style='text-align: center;'>Aqu√≠ escribe un nombre creativo para presentar tus gr√°ficos</h1>", unsafe_allow_html=True)

    # Creamos una lista de gr√°ficos
    graficos = ['Gr√°fico doble de barras de los seguidores en TikTok de las entidades publicas de salud 2021-2025', 'Nube de palabras de la canci√≥n Viva la vida', 'Mapa de mis peliculas favoritas']

    # Creamos un cuadro de selecci√≥n en la p√°gina de gr√°ficos
    grafico_seleccionado = st.selectbox('Selecciona un gr√°fico', graficos)

    # El cuadro de selecci√≥n se crea con la funci√≥n selectbox.
    # El primer argumento es el texto que se muestra en el cuadro de selecci√≥n.
    # El segundo argumento es una lista de opciones que se pueden seleccionar.
    # En este caso, las opciones son los elementos de la lista graficos.
    # La opci√≥n seleccionada se asigna a la variable grafico_seleccionado.
    # La variable grafico_seleccionado se utiliza para mostrar el gr√°fico correspondiente en la aplicaci√≥n web.
    

    # Mostramos el gr√°fico seleccionado
    if grafico_seleccionado == 'Gr√°fico doble de barras de los seguidores en TikTok de las entidades publicas de salud 2021-2025':
        st.markdown("<div style='text-align: justify; font-size: 20px;'>Aqu√≠ debe ir una breve interpretaci√≥n de tu gr√°fico</div>", unsafe_allow_html=True)
        st.image("Grafico_doble_barras.png", caption='Gr√°fico doble de barras de los seguidores en TikTok de las entidades publicas de salud 2021-2025', width=500)
        pass
    elif grafico_seleccionado == 'Nube de palabras de la canci√≥n Viva la vida':
        st.markdown("<div style='text-align: justify; font-size: 20px;'>Aqu√≠ debe ir una breve interpretaci√≥n de tu gr√°fico</div>", unsafe_allow_html=True)
        st.image("Nube_palabras.png", caption='Nube de palabras de la canci√≥n Viva la vida', width=500)
        pass
    elif grafico_seleccionado == 'mapa_peliculas':
        st.markdown("<div style='text-align: justify; font-size: 20px;'>Aqu√≠ debe ir una breve interpretaci√≥n de tu mapa</div>", unsafe_allow_html=True)
        # Si "mapa_cusco.html" es un archivo HTML (no una imagen), debes mostrarlo con st.components.v1.html
        import streamlit.components.v1 as components
        with open("mapa_cusco.html", "r", encoding="utf-8") as f:
            html_content = f.read()
        components.html(html_content, height=500)
        pass

    # if grafico_seleccionado == 'Gr√°fico de barras verticales de lenguas aisladas':
    # st.markdown("<div style='text-align: justify; font-size: 20px;'>Aqu√≠ debe ir una breve interpretaci√≥n de tu gr√°fico</div>", unsafe_allow_html=True)
    # st.image("aisladas_base_datos.png", caption='Gr√°fico de lenguas aisladas', width=500): Esta l√≠nea est√° mostrando una imagen en la aplicaci√≥n web.
    # La funci√≥n image toma como primer argumento el nombre del archivo de la imagen que se desea mostrar.
    # En este caso, la imagen es "aisladas_base_datos.png".
    # El argumento caption se utiliza para proporcionar una etiqueta a la imagen,
    # en este caso "Gr√°fico de lenguas aisladas".
    # El argumento width se utiliza para especificar el ancho de la imagen, en este caso 500 p√≠xeles.

    # elif grafico_seleccionado == 'mapa_cusco':
    # import streamlit.components.v1 as components
    # with open("mapa_cusco.html", "r", encoding="utf-8") as f:
    #     html_content = f.read()
    # components.html(html_content, height=500): Esta l√≠nea est√° mostrando un archivo HTML en la aplicaci√≥n web.
    # La funci√≥n components.html toma como primer argumento el contenido HTML que se desea mostrar.
    # En este caso, el contenido HTML se lee desde el archivo "mapa_cusco.html".
    # El argumento height se utiliza para especificar la altura del contenido HTML, en este caso 500 p√≠xeles.
    
    # Si no tenemos el archivo HTML, podemos agregar el c√≥digo para crear el mapa de Cusco directamente en Streamlit.
    # Primero debes crear el diccionario de coordenadas del mapa de Cusco.
    # Luego debes crear el mapa utilizando la librer√≠a folium y streamlit-folium.
    # pip install folium
    # pip install streamlit-folium
        #import folium
        #from streamlit_folium import st_folium

        # Mostrar el mapa en Streamlit
        #st_folium(mapa_cusco, width=700, height=500)
    